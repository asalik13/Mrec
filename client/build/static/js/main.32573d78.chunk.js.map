{"version":3,"sources":["logo.svg","Components/Movie.js","Components/Rate.js","Components/Recommended.js","Components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Movie","props","useState","value","setValue","imageLink","setImageLink","useEffect","axios","get","name","then","res","data","results","poster_path","imageStyle","backgroundImage","width","height","backgroundSize","backgroundRepeat","backgroundPosition","StyledRating","withStyles","iconFilled","color","iconHover","iconEmpty","Rating","style","maxHeight","margin","backgroundColor","className","rating","defaultValue","precision","onChange","event","newValue","changeRating","id","padding","Layout","list","num","setNum","movieList","setMovieList","getNext","concat","slice","map","index","key","display","flexWrap","justifyContent","onClick","recommended","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","button","textTransform","ratings","setRatings","setList","status","setStatus","loading","setLoading","setRecommended","classes","a","css","size","AppBar","position","Toolbar","Typography","marginLeft","align","variant","Button","post","r","console","log","newRatings","JSON","parse","stringify","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.32573d78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useState, useEffect} from \"react\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport axios from \"axios\";\n\nexport default function Movie(props) {\n  const [value, setValue] = useState(0);\n  const [imageLink, setImageLink] = useState(\"\");\n  useEffect(() => {\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/search/movie?api_key=41bc5f16975cf23dbb34e6ec9292c03c&language=en-US&query=\" +\n          props.name +\n          \"&page=1&include_adult=false\"\n      )\n      .then(res => {\n        setImageLink(\n          \"url(https://image.tmdb.org/t/p/w500/\" +\n            res.data.results[0].poster_path +\n            \")\"\n        );\n      });\n  }, []);\n\n  let nameStyle = {\n    height: \"25px\",\n    padding: \"3%\",\n    color: \"white\"\n  };\n  let imageStyle = {\n    backgroundImage: imageLink,\n\n    width: \"200px\",\n    height: \"300px\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\"\n  };\n\n  let movieStyle = {\n    width: \"200px\",\n    maxHeight: \"370px\",\n    margin: \"2%\",\n    backgroundColor: \"black\"\n  };\n\n  let RatingStyle = {\n    height: \"30px\",\n    padding: \"0px\"\n  };\n\n  const StyledRating = withStyles({\n    iconFilled: {\n      color: \"#E50914\"\n    },\n    iconHover: {\n      color:\"#E50914\"\n    },\n    iconEmpty: {\n      color: \"gray\"\n    }\n  })(Rating);\n\n  return (\n    <div style={movieStyle}>\n  \n      <div style={imageStyle} className=\"image\"></div>\n      {props.rating?(<StyledRating\n        defaultValue={0}\n        precision={0.5}\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n          props.changeRating(props.id,newValue)\n        }}\n\n        style={RatingStyle}\n      />):null}\n    </div>\n  );\n}\n","import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\n\nexport default function Layout(props) {\n  const [list, setList] = useState(props.list);\n  const [ratings, setRatings] = useState({});\n  const [num, setNum] = useState(0);\n  const [movieList, setMovieList] = useState([]);\n  const [showMovieList, setShowMovieList] = useState([]);\n\n  function getNext(list) {\n    setMovieList(\n      movieList.concat(\n        list\n          .slice(num, num + 20)\n          .map((name, index) => (\n            <Movie\n              name={name}\n              key={num + index}\n              id={num + index}\n              rating={true}\n              changeRating={props.changeRating}\n            />\n          ))\n      )\n    );\n\n    setNum(num + 20);\n  }\n\n  useEffect(() => {\n    getNext(list);\n  }, []);\n\n  return (\n    <div>\n      <div\n        style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\"}}\n      >\n        {movieList}\n      </div>\n      <button onClick={() => getNext(list)}>Load More</button>\n    </div>\n  );\n}\n","import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\n\nexport default function Layout(props) {\n  const [list, setList] = useState(props.list);\n  const [recommended,setRecommended] = useState(props.recommended)\n  const [ratings, setRatings] = useState({});\n  const [num, setNum] = useState(0);\n  const [movieList, setMovieList] = useState([]);\n  const [showMovieList, setShowMovieList] = useState([]);\n\n  function getNext(list) {\n    setMovieList(\n      movieList.concat(\n        recommended\n          .slice(num, num + 20)\n          .map((index) => (\n            <Movie\n              name={list[index]}\n              key={index}\n              id={index}\n              rating={false}\n            />\n          ))\n      )\n    );\n\n    setNum(num + 20);\n  }\n\n  useEffect(() => {\n    getNext(list);\n  }, []);\n\n  return (\n    <div>\n      <div\n        style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\"}}\n      >\n        {movieList}\n      </div>\n      <button onClick={() => getNext(list)}>Load More</button>\n    </div>\n  );\n}\n","import React, {useState, useEffect} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Rate from \"./Rate\";\nimport Recommended from \"./Recommended\"\nimport axios from \"axios\";\nimport CircleLoader from \"react-spinners/GridLoader\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: \"#221f1f\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  button: {\n    textTransform: \"none\"\n  }\n}));\n\nexport default function Layout() {\n  const [ratings, setRatings] = useState({});\n  const [list, setList] = useState([]);\n  const [status, setStatus] = useState(\"home\");\n  const [loading, setLoading] = useState(true);\n  const [recommended, setRecommended] = useState([]);\n  const override = `\n  margin: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  -ms-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n`;\n  const classes = useStyles();\n  function changeRating(id, value) {\n    setRatings(ratings => {\n      let newRatings = JSON.parse(JSON.stringify(ratings));\n      newRatings[id] = value;\n      return newRatings;\n    });\n  }\n\n  function getRecommended() {\n    setLoading(true);\n    axios.post(\"http://localhost:5000/addratings\", ratings).then(res => {\n      setRecommended(res.data.r);\n      setLoading(false);\n      console.log(res.data.r);\n    });\n  }\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/movielist\").then(res => {\n      setList(res.data.a);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return (\n      <CircleLoader\n        css={override}\n        size={100}\n        color={\"#E50914\"}\n        loading={loading}\n      />\n    );\n  } else {\n    if (status === \"home\") {\n      return (\n        <div>\n          <AppBar className={classes.root} position=\"sticky\" color=\"inherit\">\n            <Toolbar>\n              <Typography\n                style={{color: \"#E50914\", marginLeft: \"5%\"}}\n                align=\"left\"\n                variant=\"h6\"\n                className={classes.title}\n              >\n                <b>MREC</b>\n              </Typography>\n              <Button\n                style={{color: \"#E50914\"}}\n                className={classes.button}\n                color=\"inherit\"\n                onClick={() => {\n                  getRecommended();\n                  setStatus(\"recommended\")\n                }}\n              >\n                Recommended\n              </Button>\n            </Toolbar>\n          </AppBar>\n          <Rate changeRating={changeRating} list={list} />\n        </div>\n      );\n    } else if(status==\"recommended\"){\n      return(<div>\n        <AppBar className={classes.root} position=\"sticky\" color=\"inherit\">\n          <Toolbar>\n            <Typography\n              style={{color: \"#E50914\", marginLeft: \"5%\"}}\n              align=\"left\"\n              variant=\"h6\"\n              className={classes.title}\n            >\n              <b>MREC</b>\n            </Typography>\n            <Button\n              style={{color: \"#E50914\"}}\n              className={classes.button}\n              color=\"inherit\"\n              onClick={() => {\n                setStatus(\"home\")\n              }}\n            >\n              Rate More Movies\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Recommended list={list} recommended={recommended} />\n      </div>)\n    }\n  }\n}\n","import React, {useState} from \"react\";\nimport logo from \"./logo.svg\";\nimport Movie from \"./Components/Movie.js\";\nimport Layout from \"./Components/Layout\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div\n      style={{\n        backgroundColor: \"#221f1f\",\n        width: \"100%\",\n        height: \"100%\"\n      }}\n      className=\"App\"\n    >\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}